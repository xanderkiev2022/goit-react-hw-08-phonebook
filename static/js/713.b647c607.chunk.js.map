{"version":3,"file":"static/js/713.b647c607.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n\nexport const LabelText = styled.h3`\n  color: var(--secondary-text-color);\n`;\n\nexport const Input = styled.input`\n  max-width: 220px;\n  border: var(--border);\n  border-radius: 4px;\n  background-color: #2c2d31;\n  color: var(--primary-text-color);\n`;\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n  background-color: var(--accent-color);\n  color: var(--primary-text-color);\n  border: var(--border);\n  border-radius: 4px;\n  font-weight: 700;\n  transition: background-color var(--animation-timing-function);\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color-hover);\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, InputContainer, Input, LabelText, Button } from './ContactForm.styled';\n\nexport function ContactForm({ onSubmitData }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handelChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') setName(value);\n    else setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const obj = {\n      name,\n      number,\n    };\n    onSubmitData(obj);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <InputContainer>\n          <label>\n            <LabelText>Name</LabelText>\n\n            <Input\n              value={name}\n              onChange={handelChange}\n              placeholder=\"Chris Pratt\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label>\n            <LabelText>Number</LabelText>\n\n            <Input\n              value={number}\n              onChange={handelChange}\n              placeholder=\"055-066-77-88\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n        </InputContainer>\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </Container>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 20px 0 0;\n  padding-left: 20px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 7px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;","import styled from 'styled-components';\n\nexport const ItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ItemText = styled.span`\n  color: #777777;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  padding: 5px 15px;\n  background-color: var(--accent-color);\n  color: var(--primary-text-color);\n  border: var(--border);\n  border-radius: 4px;\n  font-weight: 700;\n  transition: background-color var(--animation-timing-function);\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color-hover);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ItemContainer, ItemText, Button } from './Contact.styled';\n\nexport function Contact({ id, name, number, deleteContact }) {\n  return (\n    <ItemContainer>\n      <ItemText>{name}: </ItemText>\n      <ItemContainer>\n        <ItemText>{number}</ItemText>\n        <Button type=\"button\" onClick={() => deleteContact(id)}>\n          Delete\n        </Button>\n      </ItemContainer>\n    </ItemContainer>\n  );\n}\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { List, Item } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\n\nexport function ContactList({ contacts, deleteContact }) {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            <Contact name={name} number={number} id={id} deleteContact={deleteContact} />\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  max-width: 220px;\n  border: var(--border);\n  border-radius: 4px;\n  background-color: #2c2d31;\n  color: var(--primary-text-color);\n`;\n\nexport const LabelText = styled.span`\n  color: var(--secondary-text-color);\n  font-size: 18px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { FilterContainer, LabelText, Label, Input } from './Filter.styled';\n\nexport function Filter({ value, changeFilter }) {\n  return (\n    <FilterContainer>\n      <Label>\n        <LabelText>Find contacts by name</LabelText>\n        <Input type=\"text\" value={value} onChange={changeFilter} />\n      </Label>\n    </FilterContainer>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#fff\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Container, TitleH1, TitleH2 } from 'components/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getError, getLoading } from 'redux/contacts/contactsSlice';\nimport { fetchContacts, addContact, deleteContact } from 'redux/contacts/operations';\nimport { addFilter, getFilter } from 'redux/contacts/filterSlice';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts (){\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleSubmit = newContact => {\n    const dublicate = contacts.find(({ name }) => name.toLowerCase().includes(newContact.name.toLowerCase()));\n    if (dublicate) {\n      alert(`${newContact} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(newContact));\n  };\n  const changeFilter = e => dispatch(addFilter(e.currentTarget.value));\n  const delContact = id => dispatch(deleteContact(id));\n  const randerContacts = () => contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n\n  return (\n    <>\n      <Container>\n        {error ? (\n          <p>Please try again later. The problem occurred. ${error}</p>\n        ) : (\n          <>\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <>\n                <TitleH1>Phonebook</TitleH1>\n                <ContactForm onSubmitData={handleSubmit} />\n                <TitleH2>Contacts</TitleH2>\n                <Filter value={filter} changeFilter={changeFilter} />\n                {contacts.length ? (\n                  <ContactList contacts={randerContacts()} deleteContact={delContact} />\n                ) : (\n                  <p>Oh, dear, you have no friends:( Get out of your chair and do something with your life ;)</p>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </Container>\n    </>\n  );\n}\n"],"names":["Container","styled","InputContainer","LabelText","Input","Button","ContactForm","onSubmitData","useState","name","setName","number","setNumber","handelChange","e","currentTarget","value","onSubmit","preventDefault","onChange","placeholder","type","pattern","title","required","List","Item","ItemContainer","ItemText","Contact","id","deleteContact","onClick","ContactList","contacts","map","FilterContainer","Label","Filter","changeFilter","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Contacts","useSelector","getContacts","filter","getFilter","isLoading","getLoading","error","getError","dispatch","useDispatch","useEffect","fetchContacts","newContact","find","toLowerCase","includes","alert","addContact","addFilter","length","contact"],"sourceRoot":""}